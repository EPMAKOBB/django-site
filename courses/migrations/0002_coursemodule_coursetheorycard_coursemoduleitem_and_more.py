# Generated by Django 5.2.5 on 2025-09-25 11:08

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("courses", "0001_initial"),
        ("recsys", "0006_task_correct_answer_task_difficulty_level_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="CourseModule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField()),
                ("title", models.CharField(max_length=255)),
                ("subtitle", models.CharField(blank=True, max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "kind",
                    models.CharField(
                        choices=[
                            ("self", "Самостоятельный"),
                            ("skill", "Прогресс по скилу"),
                            ("task_type", "Прогресс по типу заданий"),
                        ],
                        max_length=20,
                    ),
                ),
                ("rank", models.PositiveIntegerField(default=0)),
                ("col", models.PositiveIntegerField(default=0)),
                (
                    "dx",
                    models.IntegerField(
                        default=0, help_text="Сдвиг вершины по оси X (px)"
                    ),
                ),
                (
                    "dy",
                    models.IntegerField(
                        default=0, help_text="Сдвиг вершины по оси Y (px)"
                    ),
                ),
                ("is_locked", models.BooleanField(default=False)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modules",
                        to="courses.course",
                    ),
                ),
                (
                    "skill",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="course_modules",
                        to="recsys.skill",
                    ),
                ),
                (
                    "task_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="course_modules",
                        to="recsys.tasktype",
                    ),
                ),
            ],
            options={
                "ordering": ("course", "rank", "col", "slug"),
            },
        ),
        migrations.CreateModel(
            name="CourseTheoryCard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField()),
                ("title", models.CharField(max_length=255)),
                ("subtitle", models.CharField(blank=True, max_length=255)),
                ("content", models.TextField()),
                (
                    "content_format",
                    models.CharField(
                        choices=[
                            ("markdown", "Markdown"),
                            ("html", "HTML"),
                            ("plain", "Plain text"),
                        ],
                        default="markdown",
                        max_length=20,
                    ),
                ),
                (
                    "estimated_duration_minutes",
                    models.PositiveIntegerField(
                        default=5, help_text="Оценка времени на изучение карточки"
                    ),
                ),
                (
                    "difficulty_level",
                    models.PositiveSmallIntegerField(
                        default=0,
                        help_text="Сложность карточки от 0 до 100",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="theory_cards",
                        to="courses.course",
                    ),
                ),
            ],
            options={
                "ordering": ("course", "slug"),
            },
        ),
        migrations.CreateModel(
            name="CourseModuleItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "kind",
                    models.CharField(
                        choices=[("theory", "Карточка теории"), ("task", "Задание")],
                        max_length=20,
                    ),
                ),
                ("position", models.PositiveIntegerField(default=0)),
                (
                    "min_mastery_percent",
                    models.PositiveSmallIntegerField(
                        default=0,
                        help_text="Минимальный прогресс по модулю, чтобы показывать элемент",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "max_mastery_percent",
                    models.PositiveSmallIntegerField(
                        default=100,
                        help_text="Максимальный прогресс, при превышении которого элемент скрывается",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="courses.coursemodule",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="course_module_items",
                        to="recsys.task",
                    ),
                ),
                (
                    "theory_card",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="module_items",
                        to="courses.coursetheorycard",
                    ),
                ),
            ],
            options={
                "ordering": ("module", "position", "id"),
            },
        ),
        migrations.AddIndex(
            model_name="coursemodule",
            index=models.Index(
                fields=["course", "rank", "col"], name="courses_cou_course__b83819_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="coursemodule",
            unique_together={("course", "slug")},
        ),
        migrations.AlterUniqueTogether(
            name="coursetheorycard",
            unique_together={("course", "slug")},
        ),
        migrations.AddIndex(
            model_name="coursemoduleitem",
            index=models.Index(
                fields=["module", "kind", "position"],
                name="courses_cou_module__883aaa_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="coursemoduleitem",
            unique_together={("module", "position")},
        ),
    ]
